[tool.poetry]
name = "cotai-backend"
version = "0.1.0"
description = "COTAI Backend API - Sistema de Automação para Cotações e Editais"
authors = ["COTAI Team <team@cotai.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
psycopg2-binary = "^2.9.9"
pymongo = "^4.6.0"
redis = "^5.0.1"
celery = "^5.3.4"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
email-validator = "^2.1.0"
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
httpx = "^0.25.2"
aiofiles = "^23.2.1"
pillow = "^10.1.0"
pytesseract = "^0.3.10"
spacy = "^3.7.2"
scikit-learn = "^1.3.2"
pandas = "^2.1.4"
numpy = "^1.25.2"
pyotp = "^2.9.0"
qrcode = {extras = ["pil"], version = "^7.4.2"}
cryptography = "^41.0.7"
slowapi = "^0.1.9"
user-agents = "^2.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
httpx = "^0.25.2"
factory-boy = "^3.3.0"
faker = "^20.1.0"
responses = "^0.24.1"
freezegun = "^1.3.1"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--strict-markers",
    "--tb=short",
    "--asyncio-mode=auto",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "security: Security tests",
    "auth: Authentication tests",
    "api: API endpoint tests",
    "models: Model tests",
    "services: Service layer tests",
    "external: External integration tests",
    "performance: Performance tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "app/db/migrations/*",
    "app/core/config.py",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.pytest_cache/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]